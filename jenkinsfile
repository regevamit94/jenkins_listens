pipeline {
    agent any

    parameters {
        string(name: 'SSH_HOST', description: 'IP address of the slave')
        string(name: 'SSH_USER', description: 'Username for SSH authentication')

    }
     environment {
       CLUSTERNAME = 'test'
       HOME = "${HOME}"
       TARGETDIRECTORY = "${HOME}/imjenkinsslave/"
    }  

    stages {
        stage('Check if Cluster exists') {
            steps {
                script {
                    def statusCode = sh(script: "kind get clusters | grep -w $CLUSTERNAME", returnStatus: true)
                    if (statusCode == '1') {
                        error "Kubernetes cluster '$CLUSTERNAME' is running!"
                    } else {
                        echo "Kubernetes cluster '$CLUSTERNAME' is not running. It will be created now."

                    }
                    git 'https://github.com/regevamit94/jenkins_listens'
                    sh "scp kind.yaml $SSH_USER@$SSH_HOST:$TARGETDIRECTORY"
                    sh(script:"kind create cluster --name $CLUSTERNAME --image kindest/node:v1.23.6 --config $TARGETDIRECTORY/kind.yaml")
                }
            }
        }
    }
} 
